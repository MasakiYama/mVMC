#!/usr/local/bin/perl
  #print "start !! \n";
  #input!!
  &input;
  &input_chemi;
  #input!!
  $orb_num=$tmp_orb;
  $L_x=$tmp_Lx;
  $L_y=$tmp_Ly;
  $lambda=$tmp_lambda;
  $L=$L_x*$L_y;
  $Ns=$L;
  $All_N=$Ns*$orb_num;
  printf("CHECK trans L_x=$L_x L_y=$L_y lambda=$lambda orb=$orb_num \n");

  #$chemi[0]=-0.12;
  #$chemi[1]=0.10;
  #$chemi[2]=-0.19;
  #$chemi[3]=0.10;
  #$chemi[4]=0.16+0.0;

  for($T_i=1;$T_i<=12;$T_i++){
    &input_T;
  }
#Finish
  $tmp=$All_N+24*$orb_num*$All_N;
  $tmp=2*$tmp;
  $fname="ztransfer.def";
  open(FILE,">$fname");
  printf FILE "========misawa======== \n";
  printf FILE "NTransfer $tmp  \n";
  printf FILE "========misawa======== \n";
  printf FILE "========i_j_s_tijs  ====== \n";
  printf FILE "========misawa======== \n";

  # up spin
for($spin_i=0;$spin_i<2;$spin_i++){
  for($all_i=0;$all_i<$All_N;$all_i+=1){
    $orb_i  = $all_i%$orb_num;
    $site_i = ($all_i-$orb_i)/$orb_num;
    $i_x    = $site_i%$L_x;
    $i_y    = ($site_i-$i_x)/$L_x;
    printf FILE ("%4d  %4d  %4d  %lf\n",$all_i,$all_i,$spin_i,-$chemi[$orb_i]);

    #nearest
    #(1,0)
    $tmp_x    = ($i_x+1)%$L_x;
    $tmp_y    = $i_y;
    $tmp_site = $tmp_y*$L_x+$tmp_x;
    $tmp_sgn  = 1.0;
    $tmp_i    = 1;
    &sub_tr;
    #(-1,0)
    $tmp_x    = ($i_x-1+$L_x)%$L_x;
    $tmp_y    = $i_y;
    $tmp_site = $tmp_y*$L_x+$tmp_x;
    $tmp_sgn  = -1.0;
    $tmp_i    = 1;
    &sub_tr;
    #(0,1)
    $tmp_x    = $i_x;
    $tmp_y    = ($i_y+1)%$L_y;
    $tmp_site = $tmp_y*$L_x+$tmp_x;
    $tmp_sgn  = 1.0;
    $tmp_i    = 2;
    &sub_tr;
    #(0,-1)
    $tmp_x    = $i_x;
    $tmp_y    = ($i_y-1+$L_y)%$L_y;
    $tmp_site = $tmp_y*$L_x+$tmp_x;
    $tmp_sgn  = -1.0;
    $tmp_i    = 2;
    &sub_tr;

    #next nearest
    #(1,1)
    $tmp_x    = ($i_x+1)%$L_x;
    $tmp_y    = ($i_y+1)%$L_y;
    $tmp_site = $tmp_y*$L_x+$tmp_x;
    $tmp_sgn  = 1.0;
    $tmp_i    = 3;
    &sub_tr;
    #(-1,-1)
    $tmp_x    = ($i_x-1+$L_x)%$L_x;
    $tmp_y    = ($i_y-1+$L_y)%$L_y;
    $tmp_site = $tmp_y*$L_x+$tmp_x;
    $tmp_sgn  = -1.0;
    $tmp_i    = 3;
    &sub_tr;
    #(-1,1)
    $tmp_x    = ($i_x-1+$L_x)%$L_x;
    $tmp_y    = ($i_y+1)%$L_y;
    $tmp_site = $tmp_y*$L_x+$tmp_x;
    $tmp_sgn  = 1.0;
    $tmp_i    = 4;
    &sub_tr;
    #(1,-1)
    $tmp_x    = ($i_x+1)%$L_x;
    $tmp_y    = ($i_y-1+$L_y)%$L_y;
    $tmp_site = $tmp_y*$L_x+$tmp_x;
    $tmp_sgn  = -1.0;
    $tmp_i    = 4;
    &sub_tr;

    #3rd neighbor
    #(2,0)
    $tmp_x    = ($i_x+2)%$L_x;
    $tmp_y    = ($i_y)%$L_y;
    $tmp_site = $tmp_y*$L_x+$tmp_x;
    $tmp_sgn  = 1.0;
    $tmp_i    = 5;
    &sub_tr;
    #(-2,0)
    $tmp_x    = ($i_x-2+$L_x)%$L_x;
    $tmp_y    = ($i_y+$L_y)%$L_y;
    $tmp_site = $tmp_y*$L_x+$tmp_x;
    $tmp_sgn  = -1.0;
    $tmp_i    = 5;
    &sub_tr;
    #(0,2)
    $tmp_x    = ($i_x+$L_x)%$L_x;
    $tmp_y    = ($i_y+2)%$L_y;
    $tmp_site = $tmp_y*$L_x+$tmp_x;
    $tmp_sgn  = 1.0;
    $tmp_i    = 6;
    &sub_tr;
    #(0,-2)
    $tmp_x    = ($i_x)%$L_x;
    $tmp_y    = ($i_y-2+$L_y)%$L_y;
    $tmp_site = $tmp_y*$L_x+$tmp_x;
    $tmp_sgn  = -1.0;
    $tmp_i    = 6;
    &sub_tr;

    #4th neighbor
    #(2,1)
    $tmp_x    = ($i_x+2)%$L_x;
    $tmp_y    = ($i_y+1)%$L_y;
    $tmp_site = $tmp_y*$L_x+$tmp_x;
    $tmp_sgn  = 1.0;
    $tmp_i    = 7;
    &sub_tr;
    #(-2,-1)
    $tmp_x    = ($i_x-2+$L_x)%$L_x;
    $tmp_y    = ($i_y-1+$L_y)%$L_y;
    $tmp_site = $tmp_y*$L_x+$tmp_x;
    $tmp_sgn  = -1.0;
    $tmp_i    = 7;
    &sub_tr;
    #(1,2)
    $tmp_x    = ($i_x+1+$L_x)%$L_x;
    $tmp_y    = ($i_y+2)%$L_y;
    $tmp_site = $tmp_y*$L_x+$tmp_x;
    $tmp_sgn  = 1.0;
    $tmp_i    = 8;
    &sub_tr;
    #(-1,-2)
    $tmp_x    = ($i_x-1+$L_x)%$L_x;
    $tmp_y    = ($i_y-2+$L_y)%$L_y;
    $tmp_site = $tmp_y*$L_x+$tmp_x;
    $tmp_sgn  = -1.0;
    $tmp_i    = 8;
    &sub_tr;
    #(-1,2)
    $tmp_x    = ($i_x-1+$L_x)%$L_x;
    $tmp_y    = ($i_y+2)%$L_y;
    $tmp_site = $tmp_y*$L_x+$tmp_x;
    $tmp_sgn  = 1.0;
    $tmp_i    = 9;
    &sub_tr;
    #(1,-2)
    $tmp_x    = ($i_x+1+$L_x)%$L_x;
    $tmp_y    = ($i_y-2+$L_y)%$L_y;
    $tmp_site = $tmp_y*$L_x+$tmp_x;
    $tmp_sgn  = -1.0;
    $tmp_i    = 9;
    &sub_tr;
    #(-2,1)
    $tmp_x    = ($i_x-2+$L_x)%$L_x;
    $tmp_y    = ($i_y+1)%$L_y;
    $tmp_site = $tmp_y*$L_x+$tmp_x;
    $tmp_sgn  = 1.0;
    $tmp_i    = 10;
    &sub_tr;
    #(2,-1)
    $tmp_x    = ($i_x+2)%$L_x;
    $tmp_y    = ($i_y-1+$L_y)%$L_y;
    $tmp_site = $tmp_y*$L_x+$tmp_x;
    $tmp_sgn  = -1.0;
    $tmp_i    = 10;
    &sub_tr;

    #5th neighbor
    #(2,2)
    $tmp_x    = ($i_x+2)%$L_x;
    $tmp_y    = ($i_y+2)%$L_y;
    $tmp_site = $tmp_y*$L_x+$tmp_x;
    $tmp_sgn  = 1.0;
    $tmp_i    = 11;
    &sub_tr;
    #(-2,-2)
    $tmp_x    = ($i_x-2+$L_x)%$L_x;
    $tmp_y    = ($i_y-2+$L_y)%$L_y;
    $tmp_site = $tmp_y*$L_x+$tmp_x;
    $tmp_sgn  = -1.0;
    $tmp_i    = 11;
    &sub_tr;
    #(-2,2)
    $tmp_x    = ($i_x-2+$L_x)%$L_x;
    $tmp_y    = ($i_y+2)%$L_y;
    $tmp_site = $tmp_y*$L_x+$tmp_x;
    $tmp_sgn  = 1.0;
    $tmp_i    = 12;
    &sub_tr;
    #(2,-2)
    $tmp_x    = ($i_x+2)%$L_x;
    $tmp_y    = ($i_y-2+$L_y)%$L_y;
    $tmp_site = $tmp_y*$L_x+$tmp_x;
    $tmp_sgn  = -1.0;
    $tmp_i    = 12;
    &sub_tr;
  }
}
 close(FILE);
 printf "trans.prl finish \n";

 sub input{
  #input START 
  $Lx_cnt=0;
  $Ly_cnt=0;
  $orb_cnt=0;
  $lambda_cnt=0;
  $file=sprintf("input.txt");
  open(INPUTFILE,$file);
  while($name=<INPUTFILE>){
    chomp $name;
    #DELETE EMPTY
    $_=$name; 
    s/^\s+//;
    $name=$_; 
    @tmp = split /\s+/, $name;
    #printf "$tmp[0] $tmp[1] \n";
    if($tmp[0] eq 'Lx'){
      #printf "AA $tmp[0] $tmp[1] \n";
      $tmp_Lx = $tmp[1];
      $Lx_cnt=1;
    } 
    if($tmp[0] eq 'Ly'){
      #printf "AA $tmp[0] $tmp[1] \n";
      $tmp_Ly = $tmp[1];
      $Ly_cnt=1;
    } 
    if($tmp[0] eq 'orb_num'){
      #printf "AA $tmp[0] $tmp[1] \n";
      $tmp_orb = $tmp[1];
      $orb_cnt=1;
    } 
    if($tmp[0] eq 'lambda'){
      #printf "AA $tmp[0] $tmp[1] \n";
      $tmp_lambda = $tmp[1];
      $lambda_cnt=1;
    } 
  }
  if($Lx_cnt==0 || $Ly_cnt==0||$orb_cnt==0|| $lambda_cnt==0){
    printf "FAITAL ERROR IN input.txt !!!!!!!!!!!!! \n";
  }
  #input FINISH
 }

 sub input_T{
  #input START 
  $cnt=0; 
  $file=sprintf("QST$T_i.txt");
  open(INPUTFILE,$file);
  while($name=<INPUTFILE>){
    chomp $name;
    #DELETE EMPTY
    $_=$name; 
    s/^\s+//;
    $name=$_; 
    @tmp = split /\s+/, $name;
    #printf "$tmp[0] \n";
    $int_x = $cnt%5;
    $int_y = ($cnt-$int_x)/5;
    if(($int_x+$int_y)%2==0){
      $Dtrans[$T_i][$int_y][$int_x]=$tmp[0];
      $Vtrans[$T_i][$int_y][$int_x]=0.0;
    }else{
      $Dtrans[$T_i][$int_y][$int_x]=0.0;
      $Vtrans[$T_i][$int_y][$int_x]=$tmp[0];
    }
    $cnt+=1;
  }
  #printf "$cnt \n";
  #input FINISH
 }

 sub sub_tr{
    for($orb_j=0;$orb_j<$orb_num;$orb_j++){
      $all_j=$tmp_site*$orb_num+$orb_j;
      if(($i_x+$i_y)%2==0){
        $tmp = $Dtrans[$tmp_i][$orb_i][$orb_j]+$tmp_sgn*$Vtrans[$tmp_i][$orb_i][$orb_j];
        $tmp = -$tmp;
        printf FILE ("%4d  %4d  %4d  %lf\n",$all_i,$all_j,$spin_i,$tmp);
      }else{
        $tmp = $Dtrans[$tmp_i][$orb_i][$orb_j]-$tmp_sgn*$Vtrans[$tmp_i][$orb_i][$orb_j];
        $tmp = -$tmp;
        printf FILE ("%4d  %4d  %4d  %lf\n",$all_i,$all_j,$spin_i,$tmp);
      }
    }
 }
 sub input_chemi{
  #input START 
  $file=sprintf("input_chemi.txt");
  open(INPUTFILE,$file);
  $cnt =0;
  while($name=<INPUTFILE>){
    chomp $name;
    #DELETE EMPTY
    $_=$name;
    s/^\s+//;
    $name=$_;
    @tmp = split /\s+/, $name;
    printf "$tmp[0] $tmp[1] \n";
    $chemi[$cnt]=$tmp[1];
    $cnt+=1;
    }
  close(INPUTFILE);
 }

