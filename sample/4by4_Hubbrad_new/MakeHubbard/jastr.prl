#!/usr/local/bin/perl
  #print "start !! \n";
  #input!!
  &input;
  #input!!
  $orb_num=$tmp_orb;
  $L_x=$tmp_Lx;
  $L_y=$tmp_Ly;
  $lambda=$tmp_lambda;
  $L=$L_x*$L_y;
  $Ns=$L;
  $All_N=$Ns*$orb_num;
  printf("CHECK norbital L_x=$L_x L_y=$L_y lambda=$lambda orb=$orb_num \n");

  $cnt = 0;
  for($x_i=0;$x_i<=$L_x/2;$x_i++){
    for($y_i=$x_i;$y_i<=$L_y/2;$y_i++){
      if($x_i>0 || $y_i >0){
        $dis            =  $x_i**2+$y_i**2;
        $cnt_var[$dis]  =  $cnt;
        $cnt           += 1;
      }     
    }
  }

  $num_var  =  ($L_x/2+1)*($L_x/2+2)/2-1;
  #caution!! For anisotropic case, avobe expression is no longer valid !!!!
  $fname="zjastrowidx.def";
  open(FILE,">$fname");
  printf FILE "========misawa======== \n";
  printf FILE "NKastrowIdx $num_var  \n";
  printf FILE "========misawa======== \n";
  printf FILE "========i_j_JastrowIdx  ====== \n";
  printf FILE "========misawa======== \n";
  #for($j=0;$j<=$cnt_max;$j+=1){
  #"  $tmp_2=sqrt($dis[$j]);
  #"  print "$j $tmp_2 \n";
  #"}

  #for($i=0;$i<$sub_comp;$i++){
  #  $match[$i]=0;   
  #}

  for($all_i=0;$all_i<$All_N;$all_i+=1){
    $orb_i  = $all_i % $orb_num;    
    $site_i = ($all_i-$orb_i)/$orb_num;  
    $x_i=$site_i%$L_x;
    $y_i=($site_i-$x_i)/$L_x;

    for($all_j=0;$all_j<$All_N;$all_j++){
      $orb_j  = $all_j % $orb_num;    
      $site_j = ($all_j-$orb_j)/$orb_num;  

      $x_j=$site_j%$L_x;
      $y_j=($site_j-$x_j)/$L_x;

      $diff_x = ($x_i-$x_j+$L_x)%$L_x; 
      $diff_y = ($y_i-$y_j+$L_y)%$L_y; 

      if($all_j!=$all_i){
        if($diff_x > $L_x/2){
          $diff_x = $diff_x-$L_x;
        }
        if($diff_y > $L_y/2){
          $diff_y = $diff_y-$L_y;
        }
        $dis   = $diff_x**2 + $diff_y**2;
        $tmp_i = $cnt_var[$dis];   
        printf FILE ("%4d  %4d  %4d \n",$all_i,$all_j,$tmp_i);
      }
    }
  }
  for($i=0;$i<$num_var;$i++){
    if($i == ($num_var)/2 ){
      printf FILE ("%4d %4d \n",$i,0);
    }else{
      printf FILE ("%4d %4d \n",$i,1);
    } 
  }

  close(FILE);
  printf("jast.prl finish \n");
 sub input{
  #input START 
  $Lx_cnt=0;
  $Ly_cnt=0;
  $orb_cnt=0;
  $lambda_cnt=0;
  $file=sprintf("input.txt");
  open(INPUTFILE,$file);
  while($name=<INPUTFILE>){
    chomp $name;
    #DELETE EMPTY
    $_=$name; 
    s/^\s+//;
    $name=$_; 
    @tmp = split /\s+/, $name;
    #printf "$tmp[0] $tmp[1] \n";
    if($tmp[0] eq 'Lx'){
      #printf "AA $tmp[0] $tmp[1] \n";
      $tmp_Lx = $tmp[1];
      $Lx_cnt=1;
    } 
    if($tmp[0] eq 'Ly'){
      #printf "AA $tmp[0] $tmp[1] \n";
      $tmp_Ly = $tmp[1];
      $Ly_cnt=1;
    } 
    if($tmp[0] eq 'orb_num'){
      #printf "AA $tmp[0] $tmp[1] \n";
      $tmp_orb = $tmp[1];
      $orb_cnt=1;
    } 
    if($tmp[0] eq 'lambda'){
      #printf "AA $tmp[0] $tmp[1] \n";
      $tmp_lambda = $tmp[1];
      $lambda_cnt=1;
    } 
  }
  if($Lx_cnt==0 || $Ly_cnt==0||$orb_cnt==0|| $lambda_cnt==0){
    printf "FAITAL ERROR IN input.txt !!!!!!!!!!!!! \n";
  }
  #input FINISH
 }


