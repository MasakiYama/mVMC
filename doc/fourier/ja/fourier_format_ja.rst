.. _fileformat:

ファイルフォーマット
====================

.. _geometry:

ジオメトリー
------------

:ref:`tutorial` でのファイル名は ``geometry.dat`` .
mVMC/:math:`{\mathcal H}\Phi` のスタンンダードモードを用いた場合には
上記のファイル名で自動的に生成されるので, とくに気にする必要はない.

::

   1.000000     0.000000     0.000000  (1)
   0.000000     1.000000     0.000000  (1)
   0.000000     0.000000     1.000000  (1)
   0.000000     0.000000     0.000000  (2)
   4 0 0                               (3)
   0 4 0                               (3)
   0 0 1                               (3)
   0.000000     0.000000     0.000000  (4)
   1.000000     0.000000     0.000000  (4)
   2.000000     0.000000     0.000000  (4)
   3.000000     0.000000     0.000000  (4)
   0.000000     1.000000     0.000000  (4)
   1.000000     1.000000     0.000000  (4)
   2.000000     1.000000     0.000000  (4)
   3.000000     1.000000     0.000000  (4)
   0.000000     2.000000     0.000000  (4)
   1.000000     2.000000     0.000000  (4)
   2.000000     2.000000     0.000000  (4)
   3.000000     2.000000     0.000000  (4)
   0.000000     3.000000     0.000000  (4)
   1.000000     3.000000     0.000000  (4)
   2.000000     3.000000     0.000000  (4)
   3.000000     3.000000     0.000000  (4)

#. 単位格子ベクトル. 任意の単位.
#. 1体項がシミュレーションセルの境界を跨いだときに付く位相(単位degree)
#. シミュレーションセルの形状を指定する三本の整数ベクトル.
   スタンダードモードの入力パラメーター ``a0W``, ``a0L``, ``a0H``, ``a1W``...
   に対応する.
#. 各サイトの座標. 単位格子ベクトルに対するフラクショナル座標として入力する.
   

サイト表示の1体および2体相関関数
--------------------------------

.. _greenindex:

計算する相関関数のインデックスの指定
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

mVMC/:math:`{\mathcal H}\Phi` で計算する相関関数を指定する.
スタンダードモードを使った場合には自動的に生成される.
総合的な説明はmVMC/:math:`{\mathcal H}\Phi` のマニュアルを参照.
:ref:`tutorial` でのファイル名は ``greenone.def`` (1体)および ``greentwo.def`` (2体)である.

:ref:`supported` にある相関関数を計算するためには, 
以下のようにインデックスを指定する必要がある.

- :math:`\langle {\hat c}_{{\bf k} \uparrow}^{\dagger} {\hat c}_{{\bf k} \uparrow}\rangle`

  :math:`\langle {\hat c}_{i \uparrow}^{\dagger} {\hat c}_{j \uparrow}\rangle`
  に対して, :math:`i` および :math:`j` がそれぞれ全てのサイトを網羅するようにする.
  
- :math:`\langle {\hat c}_{{\bf k} \downarrow}^{\dagger} {\hat c}_{{\bf k} \downarrow}\rangle`

  :math:`\langle {\hat c}_{i \downarrow}^{\dagger} {\hat c}_{j \downarrow}\rangle`
  に対して, :math:`i` および :math:`j` がそれぞれ全てのサイトを網羅するようにする.
  
- :math:`\langle {\hat \rho}_{\bf k} {\hat \rho}_{\bf k}\rangle` および
  :math:`\langle {\hat S}_{\bf k}^{z} {\hat S}_{\bf k}^{z} \rangle`

  :math:`\langle {\hat c}_{i \sigma}^{\dagger} {\hat c}_{i \sigma} {\hat c}_{j \sigma'}^{\dagger} {\hat c}_{j \sigma'}\rangle`
  に対して, :math:`i` および :math:`j` がそれぞれ全てのサイトを網羅し,
  :math:`\sigma` および :math:`\sigma'` が :math:`\uparrow`, :math:`\downarrow` を網羅するようにする.

- :math:`\langle {\hat S}_{\bf k}^{+} {\hat S}_{\bf k}^{-} \rangle` および
  :math:`\langle {\hat {\bf S}}_{\bf k} \cdot {\hat {\bf S}}_{\bf k} \rangle`

  :math:`{\mathcal H}\Phi` の場合は
  :math:`\langle {\hat c}_{i \sigma}^{\dagger} {\hat c}_{i -\sigma} {\hat c}_{j -\sigma}^{\dagger} {\hat c}_{j \sigma}\rangle`
  に対して, :math:`i` および :math:`j` がそれぞれ全てのサイトを網羅し,
  :math:`\sigma` が :math:`\uparrow`, :math:`\downarrow` を網羅するようにする.
  mVMC の場合は
  :math:`\langle {\hat c}_{i \sigma}^{\dagger} {\hat c}_{j \sigma} {\hat c}_{j -\sigma}^{\dagger} {\hat c}_{i -\sigma}\rangle`
  に対して, :math:`i` および :math:`j` がそれぞれ全てのサイトを網羅し,
  :math:`\sigma` が :math:`\uparrow`, :math:`\downarrow` を網羅するようにする.
  いずれの場合も演算子の順番に注意にすること.
  
スタンダードモードのデフォルト(``outputmode="corr"``)では,
自動的に上記のインデックスが指定されるため, 特に気にする必要はない.

.. _zvocisajs:

サイト表示の1体および2体相関関数の計算結果
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

:ref:`greenindex` で指定したインデックスを持つ相関関数が
mVMC/:math:`{\mathcal H}\Phi` によって計算され,
ファイルに出力される.
総合的な説明はmVMC/:math:`{\mathcal H}\Phi` のマニュアルを参照.
:ref:`tutorial` でのファイル名は
``output/zvo_cisajs_001.dat`` および ``output/zvo_cisajscktalt_001.dat`` (mVMC), 
``output/zvo_cisajs.dat`` および ``output/zvo_cisajscktalt.dat`` (:math:`{\mathcal H}\Phi`).

``fourier`` ユーティリティはこのファイルを読み込んで計算を行う.
この時, (スタンダードモードを使わず自分でインデックスを指定するなどにより)
:ref:`greenindex` で挙げたインデックスの相関関数のなかで欠けているものがある場合,
それを 0 として扱う.

.. _zvocorr:

プリミティブゾーン内の相関関数
------------------------------

Fourier変換された相関関数(波数表示)が入っている.
ユーティリイティ ``fourier`` によって生成される.
:ref:`tutorial` でのファイル名は ``output/zvo_corr.dat`` である.

::
   
   #HPhi          16                                              (1)
   # kx[1] ky[2] kz[3](Cart.) UpUp[4,5] (Re. Im.) DownDown[6,7]   (2)
   # Density[8,9] SzSz[10,11] S+S-[12,13] S-S+[14,15]             (2)
   #k-offset      0.0000000      0.0000000      0.0000000         (3)
   0.00000E+00    0.00000E+00    0.00000E+00    0.31250E-01  .... (4)
   0.15708E+01    0.00000E+00    0.00000E+00    0.31250E-01  .... (4)
   :                                                               :

#. ``HPhi`` の出力から作成された場合には ``"#HPhi"``,
   ``vmc.out`` の出力から作成された場合には ``"#mVMC"`` と書かれる.
   それに続く整数は, プリミティブ ブリルアンゾーン内の :math:`k` 点の数である.
#. 各カラムに出力されている量の説明.
#. シミュレーションセルの境界を跨ぐ一体項に位相が付く場合の,
   一体相関関数の :math:`k` 点の変位.
   すなわち, この後の行の4〜7列目の一体相関関数は,
   1〜3列目の :math:`k` 点からこのオフセットの分だけずれた点のものである.
#. :math:`k` 点(デカルト座標)と相関関数.
   それぞれの相関関数の実部と虚部が書かれている.
   
.. _kpoint:

corplot用 *k* 点ファイル
------------------------

``fourier`` ユーティリティで生成され, 
``corplot`` ユーティリティでプロットを行う時に読み込まれる.
ファイル名は ``kpoint.dat`` である.

::
   
   81           9                                      (1)
   0.62832E+01    0.00000E+00    0.00000E+00           (2)
   0.00000E+00    0.62832E+01    0.00000E+00           (2)
   0.00000E+00    0.00000E+00    0.62832E+01           (2)
   -0.62832E+01   -0.62832E+01    0.00000E+00      1   (3)
   -0.47124E+01   -0.62832E+01    0.00000E+00      2   (3)
   -0.31416E+01   -0.62832E+01    0.00000E+00      3
   -0.15708E+01   -0.62832E+01    0.00000E+00      4
   0.00000E+00   -0.62832E+01    0.00000E+00      1
   0.15708E+01   -0.62832E+01    0.00000E+00      2
   0.31416E+01   -0.62832E+01    0.00000E+00      3
   0.47124E+01   -0.62832E+01    0.00000E+00      4

#. ``corplot`` でプロットされる :math:`k` 点の総数および
   gnuplot のsplotで表示する時の :math:`k` 点の区切り.
#. 逆格子ベクトル(デカルト座標)
#. :math:`k` ベクトル(デカルト座標)と,
   その :math:`k` 点と等価なプリミティブゾーン内の :math:`k` 点のインデックス.
   このインデックスは :ref:`zvocorr` での :math:`k` 点の番号に対応している.
   
.. _gnuplot:

gnuplot スクリプト
------------------

``corplot`` にて作成され,
内部で起動した gnuplot によって読み込まれる.
``corplot`` とは別に 直接gnuplotを起動して, ``load`` でよみこむことも可能である.
ファイル名は ``correlation.gp`` である.

.. code-block:: gnuplot

   #set terminal pdf color enhanced \    (1)
   #dashed dl 1.0 size 20.0cm, 20.0cm    (1)
   #set output 'correlation.pdf'         (1)
   #set view 60.0, 30.0                  (1)

   set view equal xy
   set ticslevel 0
   set hidden3d
   set xlabel 'kx'
   set ylabel 'ky'
   set zrange [    0.25000E-10:    0.18435E+00]

   set pm3d
   set pm3d interpolate 5, 5
   set view 0.0, 0.0

   #####  Set Brillouin-Zone Boundary  #####

   set arrow from    -0.31416E+01,   -0.31416E+01,    ...
   set arrow from    -0.31416E+01,    0.31416E+01,    ...
   :
   #####  End Set Brillouin-Zone Boundary  #####

   splot \
   'correlation.dat' u 1:2:3 w l tit '1' (2)
   pause -1

#. 図をPDFファイルに出力したい時には,
   この行の先頭のコメントアウトを外す.
   論文等に貼る図を作るときには, 適宜この後にフォントの設定等を書く.
   詳しくは gnuplot のマニュアル等を参照.
#. :ref:`correlation` のファイルをプロットしている.

.. _correlation:

広範囲の *k* 点での相関関数
---------------------------

``corplot`` にて作成され,
内部で起動した gnuplot によって,
:ref:`gnuplot` を経由して読み込まれる.
ファイル名は ``correlation.dat``

::

   -0.62832E+01   -0.62832E+01    0.18435E+00    0.00000E+00
   -0.47124E+01   -0.62832E+01    0.36159E-01    0.00000E+00
   -0.31416E+01   -0.62832E+01    0.20921E-01    0.00000E+00
   -0.15708E+01   -0.62832E+01    0.36159E-01    0.00000E+00
    0.00000E+00   -0.62832E+01    0.18435E+00    0.00000E+00
    0.15708E+01   -0.62832E+01    0.36159E-01    0.00000E+00
    0.31416E+01   -0.62832E+01    0.20921E-01    0.00000E+00
    0.47124E+01   -0.62832E+01    0.36159E-01    0.00000E+00
    0.62832E+01   -0.62832E+01    0.18435E+00    0.00000E+00

   -0.62832E+01   -0.47124E+01    0.36159E-01    0.00000E+00
   -0.47124E+01   -0.47124E+01    0.20921E-01    0.00000E+00
   -0.31416E+01   -0.47124E+01    0.11372E-01    0.00000E+00
   :

1, 2列目は :math:`k` ベクトル(デカルト座標)を表す.
3列目は相関関数, 4列目はその標準誤差を表す.
