#!/usr/local/bin/perl
  #print "start !! \n";
  $PI=3.14159265358979;
  #input!!
  &input;
  &input_2;
  $orb_num=$tmp_orb;
  #input!!
  $L_x=$tmp_Lx;
  $L_y=$tmp_Ly;
  $L=$L_x*$L_y;
  $Ns=$L;
  $All_N=$Ns*$orb_num;
  printf("CHECK $All_N L_x=$L_x L_y=$L_y  orb=$orb_num \n");

  $cnt=0;
  $file=sprintf("zvo_UHF_cisajs.dat");
  #print "$file \n";
  open(INPUTFILE,$file);
  while($name=<INPUTFILE>){
     chomp $name;
     #DELETE EMPTY
     $_=$name; 
     s/^\s+//;
     $name=$_; 
     #DELETE EMPTY FINISH
     @foo = split /\s+/, $name;
     #printf "$cnt $foo[0] $foo[1] $foo[2] $foo[3] \n";
     $all_i                       = $foo[0]; 
     $all_j                       = $foo[1]; 
     $spin_i                      = $foo[2]; 
     $spin_j                      = $foo[3]; 
     $Green_abs[$all_i][$all_j][$spin_i][$spin_j] = $foo[4];
     $Green_theta[$all_i][$all_j][$spin_i][$spin_j] = $foo[5];
     $cnt+=1;
  }
  close(INPUTFILE);
  #printf "$cnt\n";

 for($orb_cnt=0;$orb_cnt<$orb_num;$orb_cnt++){
   $fname=sprintf("Result_UHF_local_$orb_cnt.dat");
   open(FILE,">$fname");
   for($i_x=0;$i_x<$L_x;$i_x++){
     for($i_y=0;$i_y<$L_y;$i_y++){
       $all_i    =  $orb_cnt+($i_x+$i_y*$L_x)*$orb_num;
       #sx
       $sx_real  = 0.5*$Green_abs[$all_i][$all_i][0][1]*cos($Green_theta[$all_i][$all_i][0][1]);
       $sx_real += 0.5*$Green_abs[$all_i][$all_i][1][0]*cos($Green_theta[$all_i][$all_i][1][0]);
       $sx_imag  = 0.5*$Green_abs[$all_i][$all_i][0][1]*sin($Green_theta[$all_i][$all_i][0][1]);
       $sx_imag += 0.5*$Green_abs[$all_i][$all_i][1][0]*sin($Green_theta[$all_i][$all_i][1][0]);
       #sy
       $sy_real  =  0.5*$Green_abs[$all_i][$all_i][0][1]*sin($Green_theta[$all_i][$all_i][0][1]);
       $sy_real += -0.5*$Green_abs[$all_i][$all_i][1][0]*sin($Green_theta[$all_i][$all_i][1][0]);
       $sy_imag  = -0.5*$Green_abs[$all_i][$all_i][0][1]*cos($Green_theta[$all_i][$all_i][0][1]);
       $sy_imag +=  0.5*$Green_abs[$all_i][$all_i][1][0]*cos($Green_theta[$all_i][$all_i][1][0]);
       #sz
       $sz_real  =  0.5*$Green_abs[$all_i][$all_i][0][0]*cos($Green_theta[$all_i][$all_i][0][0]);
       $sz_real += -0.5*$Green_abs[$all_i][$all_i][1][1]*cos($Green_theta[$all_i][$all_i][1][1]);
       $sz_imag  =  0.5*$Green_abs[$all_i][$all_i][0][0]*sin($Green_theta[$all_i][$all_i][0][0]);
       $sz_imag += -0.5*$Green_abs[$all_i][$all_i][1][1]*sin($Green_theta[$all_i][$all_i][1][1]);
       #all spin
       $all_spin = sqrt($sx_real**2+$sx_imag**2+$sy_real**2+$sy_imag**2+$sz_real**2+$sz_imag**2);

       #charge
       $charge   =  $Green_abs[$all_i][$all_i][0][0]*cos($Green_theta[$all_i][$all_i][0][0]);
       $charge  +=  $Green_abs[$all_i][$all_i][1][1]*cos($Green_theta[$all_i][$all_i][1][1]);

       $Tsx_real[$orb_cnt][$i_x][$i_y] = $sx_real; 
       #$Tsx_imag[$orb_cnt][$i_x][$i_y] = $sx_imag; 

       $Tsy_real[$orb_cnt][$i_x][$i_y] = $sy_real; 
       #$Tsy_imag[$orb_cnt][$i_x][$i_y] = $sy_imag; 

       $Tsz_real[$orb_cnt][$i_x][$i_y] = $sz_real; 
       #$Tsz_imag[$orb_cnt][$i_x][$i_y] = $sz_imag; 

       $TCharge[$orb_cnt][$i_x][$i_y] = $charge; 
       printf FILE ("%4d %4d %f %f %f %f %f %f %f %f\n",$i_x,$i_y,$charge,$all_spin,$sx_real,$sx_imag,$sy_real,$sy_imag,$sz_real,$sz_imag);
     }
     printf FILE ("\n");
   }
   close(FILE);
 } 

 for($orb_cnt=0;$orb_cnt<$orb_num;$orb_cnt++){
 #charge
   $fname=sprintf("Charge_$orb_cnt.dat");
   open(FILE,">$fname");
   for($kx=0;$kx<=$L_x;$kx+=1){
     for($ky=0;$ky<=$L_y;$ky+=1){
       $All_Charge   = 0.0;
       $Total_Charge = 0.0;
       for($i_x=0;$i_x<$L_x;$i_x++){
         for($i_y=0;$i_y<$L_y;$i_y++){
           $diff_x        = 2*$PI*($i_x)/$L_x;
           $diff_y        = 2*$PI*($i_y)/$L_y;
           $All_Charge   += $TCharge[$orb_cnt][$i_x][$i_y]*cos($diff_x*$kx+$diff_y*$ky);
           $Total_Charge += $TCharge[$orb_cnt][$i_x][$i_y];
         }
       }
       if($kx%$L_x==0 && $ky%$L_y==0 ){
         $All_Charge   = 0.0;
         $Total_Charge   = $Total_Charge/($L_x*$L_y);
         printf FILE ("%4d %4d %f %f \n",$kx,$ky,$All_Charge,$Total_Charge);
       }else{
         $All_Charge   = $All_Charge/($L_x*$L_y);
         printf FILE ("%4d %4d %f  \n",$kx,$ky,$All_Charge);
       } 
     } 
     printf FILE ("\n");
   } 
   close(FILE);
#mx,my,mz
   $max_Sx = 0;
   $max_Sy = 0;
   $max_Sz = 0;
   $fname=sprintf("Spin_$orb_cnt.dat");
   open(FILE,">$fname");
   for($kx=0;$kx<=$L_x;$kx+=1){
     for($ky=0;$ky<=$L_y;$ky+=1){
       $ASpin_x    = 0.0;
       $ASpin_y    = 0.0;
       $ASpin_z    = 0.0;
       $BSpin_x    = 0.0;
       $BSpin_y    = 0.0;
       $BSpin_z    = 0.0;
       for($i_x=0;$i_x<$L_x;$i_x++){
         for($i_y=0;$i_y<$L_y;$i_y++){
           $diff_x        = 2*$PI*($i_x)/$L_x;
           $diff_y        = 2*$PI*($i_y)/$L_y;
           $ASpin_x      += $Tsx_real[$orb_cnt][$i_x][$i_y]*cos($diff_x*$kx+$diff_y*$ky);
           $BSpin_x      += $Tsx_real[$orb_cnt][$i_x][$i_y]*sin($diff_x*$kx+$diff_y*$ky);
           $ASpin_y      += $Tsy_real[$orb_cnt][$i_x][$i_y]*cos($diff_x*$kx+$diff_y*$ky);
           $BSpin_y      += $Tsy_real[$orb_cnt][$i_x][$i_y]*sin($diff_x*$kx+$diff_y*$ky);
           $ASpin_z      += $Tsz_real[$orb_cnt][$i_x][$i_y]*cos($diff_x*$kx+$diff_y*$ky);
           $BSpin_z      += $Tsz_real[$orb_cnt][$i_x][$i_y]*sin($diff_x*$kx+$diff_y*$ky);
         }
       }
       $ASpin_x = $ASpin_x/$Ns;
       $ASpin_y = $ASpin_y/$Ns;
       $ASpin_z = $ASpin_z/$Ns;
       $BSpin_x = $BSpin_x/$Ns;
       $BSpin_y = $BSpin_y/$Ns;
       $BSpin_z = $BSpin_z/$Ns;
       $CSpin_x = sqrt($ASpin_x**2+$BSpin_x**2);
       $CSpin_y = sqrt($ASpin_y**2+$BSpin_y**2);
       $CSpin_z = sqrt($ASpin_z**2+$BSpin_z**2);
       if($max_Sx<$CSpin_x){ 
         $max_Sx = $CSpin_x;
       }
       if($max_Sy<$CSpin_y){ 
         $max_Sy = $CSpin_y;
       }
       if($max_Sz<$CSpin_z){ 
         $max_Sz = $CSpin_z;
       }
       printf FILE ("%4d %4d %f %f %f\n",$kx,$ky,$CSpin_x,$CSpin_y,$CSpin_z);
       #printf FILE ("%4d %4d %f %f %f\n",$kx,$ky,$BSpin_x,$BSpin_y,$BSpin_z);
     } 
     printf FILE ("\n");
   } 
   close(FILE);

 }
 $fname=sprintf("EneSpin_00.dat");
 open(FILE,">$fname");
 printf FILE ("%lf %lf %lf %lf %lf %4d %4d \n",$U,$Ene,$max_Sx,$max_Sy,$max_Sz,$i_x,$i_y);
 close(FILE);

 


 sub input{
  #input START 
  $Lx_cnt=0;
  $Ly_cnt=0;
  $orb_cnt=0;
  $file=sprintf("input.txt");
  open(INPUTFILE,$file);
  while($name=<INPUTFILE>){
    chomp $name;
    #DELETE EMPTY
    $_=$name; 
    s/^\s+//;
    $name=$_; 
    @tmp = split /\s+/, $name;
    #printf "$tmp[0] $tmp[1] \n";
    if($tmp[0] eq 'Lx'){
      #printf "AA $tmp[0] $tmp[1] \n";
      $tmp_Lx = $tmp[1];
      $Lx_cnt=1;
    } 
    if($tmp[0] eq 'Ly'){
      #printf "AA $tmp[0] $tmp[1] \n";
      $tmp_Ly = $tmp[1];
      $Ly_cnt=1;
    } 
    if($tmp[0] eq 'orb_num'){
      #printf "AA $tmp[0] $tmp[1] \n";
      $tmp_orb = $tmp[1];
      $orb_cnt=1;
    } 
    if($tmp[0] eq 'U'){
      #printf "AA $tmp[0] $tmp[1] \n";
      $U = $tmp[1];
    } 
  }
  if($Lx_cnt==0 || $Ly_cnt==0||$orb_cnt==0){
    printf "FAITAL ERROR IN input.txt !!!!!!!!!!!!! \n";
  }
  #input FINISH
 }

sub input_2{
  $file=sprintf("zvo_result.dat");
  open(INPUTFILE,$file);
  while($name=<INPUTFILE>){
    chomp $name;
    #DELETE EMPTY
    $_=$name;
    s/^\s+//;
    $name=$_;
    @tmp = split /\s+/, $name;
    #printf "$tmp[0] $tmp[1] \n";
    if($tmp[0] eq 'energy'){
      #printf "AA $tmp[0] $tmp[1] \n";
      $Ene = $tmp[1];
    }
  }
  #input FINISH
 }

