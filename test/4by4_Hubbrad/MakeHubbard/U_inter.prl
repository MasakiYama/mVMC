#!/usr/local/bin/perl
  #input!!
  &input;
  #input!!
  $orb_num=$tmp_orb;
  $L_x=$tmp_Lx;
  $L_y=$tmp_Ly;
  $lambda=$tmp_lambda;
  $L=$L_x*$L_y;
  $Ns=$L;
  $All_N=$Ns*$orb_num;
  printf("CHECK U_inter $U $J $All_N L_x=$L_x L_y=$L_y lambda=$lambda orb=$orb_num \n");


  $tmp=0*2*$All_N;
  $fname="zcoulombinter.def";
  open(FILE,">$fname");
  printf FILE "========misawa======== \n";
  printf FILE "NCoulombInter $tmp  \n";
  printf FILE "========misawa======== \n";
  printf FILE "========CoulombInter ====== \n";
  printf FILE "========misawa======== \n";
=pod
 $J_V = -0.25*$J;
 for($site_i=0;$site_i<$Ns;$site_i+=1){
   for($orb_i=0;$orb_i<$orb_num;$orb_i++){
      $all_i  = $orb_num*$site_i+$orb_i;
      $x      = $site_i%$L_x;
      $y      = ($site_i-$x)/$L_x;

      #(1,0)  
      $x_tmp  = ($x+1)%$L_x;
      $y_tmp  = ($y+0)%$L_y;
      $site_j = $x_tmp+$L_x*$y_tmp;
      $all_j  = $orb_num*$site_j+$orb_i;
      printf FILE ("%4d  %4d %lf\n",$all_i,$all_j,$J_V);
      #(0,1) 
      $x_tmp  = ($x+0)%$L_x;
      $y_tmp  = ($y+1+$L_y)%$L_y;
      $site_j = $x_tmp+$L_x*$y_tmp;
      $all_j  = $orb_num*$site_j+$orb_i;
      printf FILE ("%4d  %4d %lf\n",$all_i,$all_j,$J_V);
   }
 }
=cut
 close(FILE);
 printf "U_inter.prl finish \n";
 
 sub input{
  #input START 
  $Lx_cnt=0;
  $Ly_cnt=0;
  $orb_cnt=0;
  $lambda_cnt=0;
  $file=sprintf("input.txt");
  open(INPUTFILE,$file);
  while($name=<INPUTFILE>){
    chomp $name;
    #DELETE EMPTY
    $_=$name; 
    s/^\s+//;
    $name=$_; 
    @tmp = split /\s+/, $name;
    #printf "$tmp[0] $tmp[1] \n";
    if($tmp[0] eq 'Lx'){
      #printf "AA $tmp[0] $tmp[1] \n";
      $tmp_Lx = $tmp[1];
      $Lx_cnt=1;
    } 
    if($tmp[0] eq 'Ly'){
      #printf "AA $tmp[0] $tmp[1] \n";
      $tmp_Ly = $tmp[1];
      $Ly_cnt=1;
    } 
    if($tmp[0] eq 'orb_num'){
      #printf "AA $tmp[0] $tmp[1] \n";
      $tmp_orb = $tmp[1];
      $orb_cnt=1;
    } 
    if($tmp[0] eq 'lambda'){
      #printf "AA $tmp[0] $tmp[1] \n";
      $tmp_lambda = $tmp[1];
      $lambda_cnt=1;
    } 
    if($tmp[0] eq 'J'){
      $J = $tmp[1];
    } 
    if($tmp[0] eq 'U'){
      #printf "AA $tmp[0] $tmp[1] \n";
      $U = $tmp[1];
    } 

  }
  if($Lx_cnt==0 || $Ly_cnt==0||$orb_cnt==0|| $lambda_cnt==0){
    printf "FAITAL ERROR IN input.txt !!!!!!!!!!!!! \n";
  }
  #input FINISH
 }
